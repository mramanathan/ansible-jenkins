---
  - name: Create jenkins group
    group:
      name: "{{ jenkins_config_group }}"
      state: present
  
  - name: Create jenkins user
    user:
      name: "{{ jenkins_config_owner }}"
      group: "{{ jenkins_config_group }}"
      home: "{{ jenkins_home }}"
      shell: /bin/false
      state: present
  
  - name: Add Jenkins key repo 
    apt_key:
      url: https://pkg.jenkins.io/debian-stable/jenkins.io.key
      state: present

  - name: Add Jenkins stable repo
    apt_repository:
      repo: 'deb https://pkg.jenkins.io/debian-stable binary/'
      state: present
      filename: jenkins.list

  - name: Update apt cache
    apt:
      update_cache: yes
  
  #- name: Download specific version of Jenkins
  #  get_url:
  #    url: "https://pkg.jenkins.io/debian-stable/binary/jenkins_{{ jenkins_version }}_all.deb"
  #    dest: /tmp/jenkins_{{ jenkins_version }}.deb

  - name: Install jenkins package
    apt:
      state: present
      pkg:
        - "jenkins={{ jenkins_version }}"

  - name: Set JENKINS_HOME
    lineinfile:
      dest: "{{ jenkins_init_file }}"
      line: "JENKINS_HOME={{ jenkins_home }}"
      regexp: '^JENKINS_HOME='

  - name: Set Jenkins port
    lineinfile:
      dest: "{{ jenkins_init_file }}"
      regexp: '^HTTP_PORT='
      line: "HTTP_PORT={{ jenkins_port }}"

  - name: Prep initial setup -- push preset global config
    copy:
      src: core/config.xml
      dest: "{{ jenkins_home }}"
      mode: 0644
      owner: "{{ jenkins_config_owner }}"
      group: "{{ jenkins_config_group }}"

  - name: Prep initial setup -- push groovy scripts for basic system setup
    copy:
      src: init.groovy.d
      dest: "{{ jenkins_home }}"
      mode: 0644
      owner: "{{ jenkins_config_owner }}"
      group: "{{ jenkins_config_group }}"

  - name: Turn off Jenkins setup wizard
    lineinfile:
      dest: "{{ jenkins_init_file }}"
      regexp: '^JAVA_ARGS='
      line: 'JAVA_ARGS="-Djava.awt.headless=true -Djenkins.install.runSetupWizard=false"'
      insertbefore: '^DAEMON_ARGS='
    notify: 
      - restart_jenkins

  - name: Wait until Jenkins restart is complete
    wait_for:
      port: "{{ jenkins_port }}"
      timeout: 300

  - name: Purge setup wizard Groovy
    file:
      path: "{{ jenkins_home }}/init.groovy.d/basic-security.groovy"
      state: absent

  - name: Push pre-configured build agent config
    copy:
      src: nodes
      dest: "{{ jenkins_home }}"
      mode: 0644
      owner: "{{ jenkins_config_owner }}"
      group: "{{ jenkins_config_group }}"

